% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/example_shaders_texture_waves.R
\name{shaders_texture_waves}
\alias{shaders_texture_waves}
\title{Wave shader}
\description{
Wave shader
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
## Shaders used in this example are for #version 330 (OpenGL 3.3)

####################
## Initialization ##
####################
screen_width <- 640
screen_height <- 450

init_window(screen_width, screen_height, "raylib [shaders] example - texture waves")

## Load texture texture to apply shaders
texture <- Texture(system.file(file.path("resources", "space.png"), package = "raylib.R"))

## Load shader and setup location points and values
shader <- Shader(vs_filename = "",
                fs_filename = system.file(file.path("resources", "shaders", "glsl330",
                                                    "wave.fs"), package = "raylib.R"))

seconds_loc <- get_shader_location(shader, "secondes")
freq_x_loc <- get_shader_location(shader, "freqX")
freq_y_loc <- get_shader_location(shader, "freqY")
amp_x_loc <- get_shader_location(shader, "ampX")
amp_y_loc <- get_shader_location(shader, "ampY")
speed_x_loc <- get_shader_location(shader, "speedX")
speed_y_loc <- get_shader_location(shader, "speedY")

freq_x <- as.double(25)
freq_y <- as.double(25)
amp_x <- as.double(5)
amp_y <- as.double(5)
speed_x <- as.double(8)
speed_y <- as.double(8)

screen_size <- as.double(c(get_screen_width(), get_screen_height()))
set_shader_value(shader, get_shader_location(shader, "size"), screen_size)
set_shader_value(shader, freq_x_loc, freq_x)
set_shader_value(shader, freq_y_loc, freq_y)
set_shader_value(shader, amp_x_loc, amp_x)
set_shader_value(shader, amp_y_loc, amp_y)
set_shader_value(shader, speed_x_loc, speed_x)
set_shader_value(shader, speed_y_loc, speed_y)

seconds <- as.double(0)

set_target_fps(60) # Set our game to run at 60 frames-per-second

####################
## Main game loop ##
####################
while (!window_should_close()) { # Detect window close button or ESC key
       ############
       ## Update ##
       ############
       seconds <- seconds + get_frame_time()

       set_shader_value(shader, seconds_loc, seconds)
       ##########
       ## Draw ##
       ##########
       begin_drawing()
       {
               clear_background(raylib_color$RAYWHITE)

               begin_shader_mode(shader)
               {
                       draw_texture(texture, 0, 0, Color("white"))
                       draw_texture(texture, 0, Texture_get(texture)["width"], Color("white"))
               }
               end_shader_mode()

       }
       end_drawing()

}

#######################
## De-Initialization ##
#######################
close_window() # Close window and OpenGL context
\dontshow{\}) # examplesIf}
}
\concept{Shaders examples}
